{"ast":null,"code":"var _jsxFileName = \"/Users/archit/Desktop/codes/pep/React/reels/src/Components/VideoPost/VideoPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { firebaseDb, timeStamp } from '../../config/firebase';\nimport { Card, CardHeader, CardAction, CardContent, Button, makeStyles, Typography, TextField, CardMedia, Avatar, Container } from \"@material-ui/core\";\nimport './VideoPost.css';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../context/AuthProvider';\nimport ReactDOM from 'react-dom';\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoPost = props => {\n  _s();\n\n  let videoUrl = props.photoObj.url;\n  let [user, setUser] = useState(null);\n  let [comment, setComment] = useState(\"\");\n  let [commentList, setCommentList] = useState([]);\n  let [likesCount, setLikesCount] = useState(null);\n  let [isLiked, setIsLiked] = useState(false);\n  let {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(async () => {\n    let userId = props.photoObj.uid;\n    let docRef = await firebaseDb.collection('users').doc(userId).get();\n    let userPostCreated = docRef.data();\n    let commentList = props.photoObj.comments;\n    let updateCommentList = [];\n    let likes = props.photoObj.likes;\n\n    for (let i = 0; i < commentList.length; i++) {\n      let commentObj = commentList[i];\n      let doc = await firebaseDb.collection('users').doc(commentObj.uid).get();\n      let commentuserPic = doc.data().profileImageUrl;\n      updateCommentList.push({\n        profilePic: commentuserPic,\n        comment: commentObj.comment\n      });\n    }\n\n    if (likes.includes(currentUser.userId)) {\n      setIsLiked(true);\n      setLikesCount(likes.length - 1);\n    } else {\n      if (likes.length != 0) setLikesCount(likes.length);\n    }\n\n    setUser(userPostCreated);\n    setCommentList(updateCommentList);\n  }, []);\n\n  const addCommentToCommentList = async e => {\n    let profilePic;\n\n    if (currentUser.uid == user.userId) {\n      profilePic = user.profileImageUrl;\n    } else {\n      let doc = await firebaseDb.collection('users').doc(currentUser.uid).get();\n      let userImg = doc.data().profileImageUrl;\n      profilePic = userImg;\n    }\n\n    let newCommentedList = [...commentList, {\n      profilePic: profilePic,\n      comment: comment\n    }];\n    let postObj = props.photoObj;\n    postObj.comments.push({\n      uid: currentUser.uid,\n      comment: comment\n    });\n    await firebaseDb.collection('posts').doc(postObj.pid).set(postObj);\n    setCommentList(newCommentedList);\n    setComment(\"\");\n  };\n\n  const toggleLikeItem = async () => {\n    if (isLiked) {\n      let postDoc = props.photoObj;\n      let filteredLikes = postDoc.filter(uid => {\n        if (uid == currentUser.userId) return false;\n        return true;\n      });\n      postDoc.likes = filteredLikes;\n      let doc = await firebaseDb.collection('posts').doc(postDoc).set(postDoc);\n      setIsLiked(false);\n      likesCount == 1 ? setLikesCount(null) : setLikesCount(likesCount - 1);\n    } else {\n      let postDoc = props.photoObj;\n      postDoc.likes.push(currentUser.userId);\n      await firebaseDb.collection('posts').setIsLiked(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        height: \"600px\",\n        width: \"300px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: user ? user.profileImageUrl : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        varient: \"span\",\n        children: [\" \", user ? user.username : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          src: videoUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isLiked ? /*#__PURE__*/_jsxDEV(Favorite, {\n          onClick: () => toggleLikeItem,\n          style: {\n            color: \"red\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n          onClick: () => toggleLikeItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 109\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: likesCount ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          children: [\" Likes by: \", likesCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), likesCount && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          children: [\"Liked by: \", likesCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        children: \"Comments \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Add a comment\",\n        size: \"small\",\n        type: \"string\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: addCommentToCommentList,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), commentList.map(commentObj => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: commentObj.profilePic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"p\",\n            children: commentObj.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VideoPost, \"7t8fEmZRnv/9xbPe5NGFWN+u71A=\");\n\n_c = VideoPost;\n\nfunction Video(props) {\n  const handleAutoScrol = e => {\n    let next = ReactDOM.findDOMNode(e.target).parentNode.parentNode.parentNode.parentNode.nextSiblings;\n\n    if (next) {\n      next.scrollIntoView({\n        behaviour: \"smooth\"\n      });\n      e.target.muted = true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    className: \"video-styles\",\n    controls: true,\n    muted: true,\n    id: props.id,\n    loop: true,\n    onEnded: handleAutoScrol,\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: props.src,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Video;\nexport default VideoPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoPost\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["/Users/archit/Desktop/codes/pep/React/reels/src/Components/VideoPost/VideoPost.jsx"],"names":["React","useState","useEffect","firebaseDb","timeStamp","Card","CardHeader","CardAction","CardContent","Button","makeStyles","Typography","TextField","CardMedia","Avatar","Container","useContext","AuthContext","ReactDOM","Favorite","FavoriteBorder","VideoPost","props","videoUrl","photoObj","url","user","setUser","comment","setComment","commentList","setCommentList","likesCount","setLikesCount","isLiked","setIsLiked","currentUser","userId","uid","docRef","collection","doc","get","userPostCreated","data","comments","updateCommentList","likes","i","length","commentObj","commentuserPic","profileImageUrl","push","profilePic","includes","addCommentToCommentList","e","userImg","newCommentedList","postObj","pid","set","toggleLikeItem","postDoc","filteredLikes","filter","height","width","username","color","target","value","map","Video","handleAutoScrol","next","findDOMNode","parentNode","nextSiblings","scrollIntoView","behaviour","muted","id","src"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { firebaseDb, timeStamp } from '../../config/firebase';\nimport { Card, CardHeader, CardAction, CardContent, Button, makeStyles, Typography, TextField, CardMedia, Avatar, Container } from \"@material-ui/core\"\nimport './VideoPost.css'\nimport { useContext } from 'react';\nimport { AuthContext } from '../../context/AuthProvider';\nimport ReactDOM from 'react-dom';\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nconst VideoPost = (props) => {\n\n    let videoUrl = props.photoObj.url;\n    let [user, setUser] = useState(null);\n    let [comment, setComment] = useState(\"\");\n    let [commentList, setCommentList] = useState([]);\n    let [likesCount, setLikesCount] = useState(null);\n    let [isLiked, setIsLiked] = useState(false);\n    let { currentUser } = useContext(AuthContext);\n\n    useEffect(async () => {\n        let userId = props.photoObj.uid;\n        let docRef = await firebaseDb.collection('users').doc(userId).get();\n        let userPostCreated = docRef.data();\n\n        let commentList = props.photoObj.comments;\n        let updateCommentList = [];\n\n        let likes = props.photoObj.likes;\n\n        for (let i = 0; i < commentList.length; i++) {\n            let commentObj = commentList[i];\n            let doc = await firebaseDb.collection('users').doc(commentObj.uid).get();\n            let commentuserPic = doc.data().profileImageUrl;\n            updateCommentList.push({ profilePic: commentuserPic, comment: commentObj.comment })\n        }\n\n        if(likes.includes(currentUser.userId)) {\n            setIsLiked(true);\n            setLikesCount(likes.length - 1);\n        } else {\n            if(likes.length != 0) setLikesCount(likes.length);\n        }\n\n        setUser(userPostCreated);\n        setCommentList(updateCommentList);\n    }, []);\n\n    const addCommentToCommentList = async (e) => {\n        let profilePic;\n        if (currentUser.uid == user.userId) {\n            profilePic = user.profileImageUrl;\n        } else {\n            let doc = await firebaseDb.collection('users').doc(currentUser.uid).get();\n            let userImg = doc.data().profileImageUrl;\n            profilePic = userImg;\n        }\n        let newCommentedList = [...commentList, { profilePic: profilePic, comment: comment }];\n        let postObj = props.photoObj;\n        postObj.comments.push({ uid: currentUser.uid, comment: comment });\n        await firebaseDb.collection('posts').doc(postObj.pid).set(postObj);\n        setCommentList(newCommentedList);\n        setComment(\"\");\n    }\n\n    const toggleLikeItem = async () => {\n        if(isLiked) {\n            let postDoc = props.photoObj;\n            let filteredLikes = postDoc.filter(uid => {\n                if(uid == currentUser.userId) \n                    return false;\n                return true;\n            });\n            postDoc.likes = filteredLikes;\n            let doc = await firebaseDb.collection('posts').doc(postDoc).set(postDoc);\n            setIsLiked(false);\n            likesCount == 1 ? setLikesCount(null) : setLikesCount(likesCount - 1);\n        } else {\n            let postDoc = props.photoObj;\n            postDoc.likes.push(currentUser.userId);\n            await firebaseDb.collection('posts').\n            setIsLiked(true);\n        }\n    }\n \n    return (\n        <Container>\n            <Card style={{ height: \"600px\", width: \"300px\" }}>\n                <Avatar src={user ? user.profileImageUrl : \"\"}></Avatar>\n                <Typography varient=\"span\"> {user ? user.username : \"\"} </Typography>\n                <div className=\"video-container\">\n                    <Video src={videoUrl}></Video>\n                </div>\n                <div>\n                    {isLiked ? <Favorite onClick={() => toggleLikeItem} style={{color:\"red\"}}></Favorite> : <FavoriteBorder onClick={() => toggleLikeItem}></FavoriteBorder>}\n                </div>\n                <div>\n                    {likesCount ? <Typography variant=\"p\"> Likes by: {likesCount}</Typography> : <></>}\n                </div>\n                {likesCount && <div><Typography variant=\"p\">Liked by: {likesCount}</Typography></div>}\n                <Typography variant=\"p\">Comments </Typography>\n                <TextField variant=\"outlined\" label=\"Add a comment\" size=\"small\" type=\"string\" value={comment} onChange={(e) => setComment(e.target.value)}></TextField>\n                <Button variant=\"contained\" onClick={addCommentToCommentList}>Post</Button>\n                {commentList.map((commentObj) => {\n                    return (\n                        <div>\n                            <Avatar src={commentObj.profilePic}></Avatar>\n                            <Typography variant=\"p\">{commentObj.comment}</Typography>\n                        </div>\n                    );\n                })}\n            </Card>\n        </Container>\n    );\n}\n\nfunction Video(props) {\n    const handleAutoScrol = (e) => {\n        let next = ReactDOM.findDOMNode(e.target).parentNode.parentNode.parentNode.parentNode.nextSiblings;\n        if (next) {\n            next.scrollIntoView({ behaviour: \"smooth\" });\n            e.target.muted = true;\n        }\n    }\n\n    return (\n        <video className=\"video-styles\" controls muted={true} id={props.id} loop={true} onEnded={handleAutoScrol}>\n            <source src={props.src} type=\"video/mp4\"></source>\n        </video>\n    )\n}\n\nexport default VideoPost;"]},"metadata":{},"sourceType":"module"}