{"ast":null,"code":"var _jsxFileName = \"/Users/archit/Desktop/codes/pep/React/reels/src/Components/VideoPost/VideoPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { firebaseDb } from '../../config/firebase';\nimport { Card, CardHeader, CardAction, CardContent, Button, makeStyles, Typography, TextField, CardMedia, Avatar, Container } from \"@material-ui/core\";\nimport './VideoPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoPost = props => {\n  _s();\n\n  let videoUrl = props.photoObj.url;\n  let [user, setUser] = useState(null);\n  let [comment, setComment] = useState(\"\");\n  let [commentList, setCommentList] = useState([]);\n  useEffect(async () => {\n    let userId = props.photoObj.uid;\n    let docRef = await firebaseDb.collection('users').doc(userId).get();\n    let userPostCreated = docRef.data();\n    let commentList = props.photoObj.comments;\n    let updateCommentList = [];\n\n    for (let i = 0; i < comm.length; i++) {\n      const element = array[i];\n    } // let updateCommentList = commentList.map(async (commentObj) => {\n    //    let doc = await firebaseDb.collection('users').doc(commentObj.uid).get();\n    //    let commentuserPic = doc.data().profileImageUrl;\n    //    return {profilePic: commentuserPic, comment: commentObj.comment};\n    // });\n\n\n    console.log(updateCommentList);\n    setUser(userPostCreated);\n    setCommentList(updateCommentList);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        height: \"600px\",\n        width: \"300px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: user ? user.profileImageUrl : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        varient: \"span\",\n        children: [\" \", user ? user.username : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          src: videoUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        children: \"Comments \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Add a comment\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), commentList.map(commentObj => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: commentObj.profilePic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"p\",\n            children: commentObj.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, props.photoObj.pid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VideoPost, \"fEQ6Xlo/DBrEr3WcfEUlShJZfic=\");\n\n_c = VideoPost;\n\nfunction Video(props) {\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    className: \"video-styles\",\n    controls: true,\n    muted: true,\n    id: props.id,\n    loop: true,\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: props.src,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Video;\nexport default VideoPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoPost\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["/Users/archit/Desktop/codes/pep/React/reels/src/Components/VideoPost/VideoPost.jsx"],"names":["React","useState","useEffect","firebaseDb","Card","CardHeader","CardAction","CardContent","Button","makeStyles","Typography","TextField","CardMedia","Avatar","Container","VideoPost","props","videoUrl","photoObj","url","user","setUser","comment","setComment","commentList","setCommentList","userId","uid","docRef","collection","doc","get","userPostCreated","data","comments","updateCommentList","i","comm","length","element","array","console","log","height","width","profileImageUrl","username","map","commentObj","profilePic","pid","Video","id","src"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,WAAvC,EAAoDC,MAApD,EAA4DC,UAA5D,EAAwEC,UAAxE,EAAoFC,SAApF,EAA+FC,SAA/F,EAA0GC,MAA1G,EAAkHC,SAAlH,QAAmI,mBAAnI;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAEzB,MAAIC,QAAQ,GAAGD,KAAK,CAACE,QAAN,CAAeC,GAA9B;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,IAAD,CAA9B;AACA,MAAI,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACuB,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAE,YAAY;AACnB,QAAIwB,MAAM,GAAGV,KAAK,CAACE,QAAN,CAAeS,GAA5B;AACA,QAAIC,MAAM,GAAG,MAAMzB,UAAU,CAAC0B,UAAX,CAAsB,OAAtB,EAA+BC,GAA/B,CAAmCJ,MAAnC,EAA2CK,GAA3C,EAAnB;AACA,QAAIC,eAAe,GAAGJ,MAAM,CAACK,IAAP,EAAtB;AAEA,QAAIT,WAAW,GAAGR,KAAK,CAACE,QAAN,CAAegB,QAAjC;AACA,QAAIC,iBAAiB,GAAG,EAAxB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACC,MAAzB,EAAiCF,CAAC,EAAlC,EAAsC;AAClC,YAAMG,OAAO,GAAGC,KAAK,CAACJ,CAAD,CAArB;AAEH,KAXkB,CAanB;AACA;AACA;AACA;AACA;;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,iBAAZ;AACAd,IAAAA,OAAO,CAACW,eAAD,CAAP;AACAP,IAAAA,cAAc,CAACU,iBAAD,CAAd;AACH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACQ,QAAAA,MAAM,EAAC,OAAR;AAAiBC,QAAAA,KAAK,EAAC;AAAvB,OAAb;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAExB,IAAI,GAAGA,IAAI,CAACyB,eAAR,GAA0B;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,MAApB;AAAA,wBAA6BzB,IAAI,GAAGA,IAAI,CAAC0B,QAAR,GAAmB,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,GAAG,EAAE7B;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,UAAnB;AAA8B,QAAA,KAAK,EAAC,eAApC;AAAoD,QAAA,IAAI,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EASKO,WAAW,CAACuB,GAAZ,CAAiBC,UAAD,IAAgB;AAC7B,4BACI;AAAA,kCACA,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,UAAU,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,GAApB;AAAA,sBAAyBD,UAAU,CAAC1B;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,WAAUN,KAAK,CAACE,QAAN,CAAegC,GAAzB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH,OAPA,CATL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CApDD;;GAAMnC,S;;KAAAA,S;;AAsDN,SAASoC,KAAT,CAAenC,KAAf,EAAsB;AAClB,sBACI;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAgC,IAAA,QAAQ,MAAxC;AAAyC,IAAA,KAAK,EAAE,IAAhD;AAAsD,IAAA,EAAE,EAAEA,KAAK,CAACoC,EAAhE;AAAoE,IAAA,IAAI,EAAE,IAA1E;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAEpC,KAAK,CAACqC,GAAnB;AAAwB,MAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQF,K;AAQT,eAAepC,SAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { firebaseDb } from '../../config/firebase';\nimport { Card, CardHeader, CardAction, CardContent, Button, makeStyles, Typography, TextField, CardMedia, Avatar, Container } from \"@material-ui/core\"\nimport './VideoPost.css'\n\nconst VideoPost = (props) => {\n\n    let videoUrl = props.photoObj.url;\n    let [user, setUser] = useState(null);\n    let [comment, setComment] = useState(\"\");\n    let [commentList, setCommentList] = useState([]);\n\n    useEffect( async () => {\n        let userId = props.photoObj.uid;\n        let docRef = await firebaseDb.collection('users').doc(userId).get();\n        let userPostCreated = docRef.data();\n\n        let commentList = props.photoObj.comments;\n        let updateCommentList = [];\n\n        for (let i = 0; i < comm.length; i++) {\n            const element = array[i];\n            \n        }\n\n        // let updateCommentList = commentList.map(async (commentObj) => {\n        //    let doc = await firebaseDb.collection('users').doc(commentObj.uid).get();\n        //    let commentuserPic = doc.data().profileImageUrl;\n        //    return {profilePic: commentuserPic, comment: commentObj.comment};\n        // });\n        console.log(updateCommentList);\n        setUser(userPostCreated);\n        setCommentList(updateCommentList);\n    }, []);\n\n    return (\n        <Container>\n            <Card style={{height:\"600px\", width:\"300px\"}}>\n                <Avatar src={user ? user.profileImageUrl : \"\"}></Avatar>\n                <Typography varient=\"span\"> {user ? user.username : \"\"} </Typography>\n                <div className=\"video-container\">\n                    <Video src={videoUrl}></Video>\n                </div>\n                <Typography variant=\"p\">Comments </Typography>\n                <TextField variant=\"outlined\" label=\"Add a comment\" size=\"small\" ></TextField>\n                <Button variant=\"contained\" >Post</Button>\n                {commentList.map((commentObj) => {\n                    return (\n                        <div key={props.photoObj.pid}>\n                        <Avatar src={commentObj.profilePic}></Avatar>\n                        <Typography variant=\"p\">{commentObj.comment}</Typography>\n                        </div>\n                    );\n                })}\n            </Card>\n        </Container>\n    );\n}\n\nfunction Video(props) {\n    return (\n        <video className=\"video-styles\" controls muted={true} id={props.id} loop={true}>\n            <source src={props.src} type=\"video/mp4\"></source>\n        </video>\n    )\n}\n\nexport default VideoPost;"]},"metadata":{},"sourceType":"module"}