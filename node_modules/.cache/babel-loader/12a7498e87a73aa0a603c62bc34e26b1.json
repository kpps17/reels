{"ast":null,"code":"var _jsxFileName = \"/Users/archit/Desktop/codes/pep/React/reels/src/Components/VideoPost/VideoPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { firebaseDb, timeStamp } from '../../config/firebase';\nimport { Card, CardHeader, CardAction, CardContent, Button, makeStyles, Typography, TextField, CardMedia, Avatar, Container } from \"@material-ui/core\";\nimport './VideoPost.css';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../context/AuthProvider';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoPost = props => {\n  _s();\n\n  let videoUrl = props.photoObj.url;\n  let [user, setUser] = useState(null);\n  let [comment, setComment] = useState(\"\");\n  let [commentList, setCommentList] = useState([]);\n  let [likesCount, setLikesCount] = useState();\n  let {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(async () => {\n    let userId = props.photoObj.uid;\n    let docRef = await firebaseDb.collection('users').doc(userId).get();\n    let userPostCreated = docRef.data();\n    let commentList = props.photoObj.comments;\n    let updateCommentList = [];\n\n    for (let i = 0; i < commentList.length; i++) {\n      let commentObj = commentList[i];\n      let doc = await firebaseDb.collection('users').doc(commentObj.uid).get();\n      let commentuserPic = doc.data().profileImageUrl;\n      updateCommentList.push({\n        profilePic: commentuserPic,\n        comment: commentObj.comment\n      });\n    }\n\n    console.log(updateCommentList);\n    setUser(userPostCreated);\n    setCommentList(updateCommentList);\n  }, []);\n\n  const addCommentToCommentList = async e => {\n    let profilePic;\n\n    if (currentUser.uid == user.userId) {\n      profilePic = user.profileImageUrl;\n    } else {\n      let doc = await firebaseDb.collection('users').doc(currentUser.uid).get();\n      let userImg = doc.data().profileImageUrl;\n      profilePic = userImg;\n    }\n\n    let newCommentedList = [...commentList, {\n      profilePic: profilePic,\n      comment: comment\n    }];\n    let postObj = props.photoObj;\n    postObj.comments.push({\n      uid: currentUser.uid,\n      comment: comment\n    });\n    await firebaseDb.collection('posts').doc(postObj.pid).set(postObj);\n    setCommentList(newCommentedList);\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        height: \"600px\",\n        width: \"300px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: user ? user.profileImageUrl : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        varient: \"span\",\n        children: [\" \", user ? user.username : \"\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(Video, {\n          src: videoUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"p\",\n        children: \"Comments \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        label: \"Add a comment\",\n        size: \"small\",\n        type: \"string\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: addCommentToCommentList,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), commentList.map(commentObj => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: commentObj.profilePic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"p\",\n            children: commentObj.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VideoPost, \"/2YUqybsq34BKPn3gYR2mZpEw5I=\");\n\n_c = VideoPost;\n\nfunction Video(props) {\n  const handleAutoScrol = e => {\n    let next = ReactDOM.findDOMNode(e.target).parentNode.parentNode.parentNode.parentNode.nextSiblings;\n\n    if (next) {\n      next.scrollIntoView({\n        behaviour: \"smooth\"\n      });\n      e.target.muted = true;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    className: \"video-styles\",\n    controls: true,\n    muted: true,\n    id: props.id,\n    loop: true,\n    onEnded: handleAutoScrol,\n    children: /*#__PURE__*/_jsxDEV(\"source\", {\n      src: props.src,\n      type: \"video/mp4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Video;\nexport default VideoPost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoPost\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["/Users/archit/Desktop/codes/pep/React/reels/src/Components/VideoPost/VideoPost.jsx"],"names":["React","useState","useEffect","firebaseDb","timeStamp","Card","CardHeader","CardAction","CardContent","Button","makeStyles","Typography","TextField","CardMedia","Avatar","Container","useContext","AuthContext","ReactDOM","VideoPost","props","videoUrl","photoObj","url","user","setUser","comment","setComment","commentList","setCommentList","likesCount","setLikesCount","currentUser","userId","uid","docRef","collection","doc","get","userPostCreated","data","comments","updateCommentList","i","length","commentObj","commentuserPic","profileImageUrl","push","profilePic","console","log","addCommentToCommentList","e","userImg","newCommentedList","postObj","pid","set","height","width","username","target","value","map","Video","handleAutoScrol","next","findDOMNode","parentNode","nextSiblings","scrollIntoView","behaviour","muted","id","src"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { firebaseDb, timeStamp } from '../../config/firebase';\nimport { Card, CardHeader, CardAction, CardContent, Button, makeStyles, Typography, TextField, CardMedia, Avatar, Container } from \"@material-ui/core\"\nimport './VideoPost.css'\nimport { useContext } from 'react';\nimport { AuthContext} from '../../context/AuthProvider';\nimport ReactDOM from 'react-dom'\n\nconst VideoPost = (props) => {\n\n    let videoUrl = props.photoObj.url;\n    let [user, setUser] = useState(null);\n    let [comment, setComment] = useState(\"\");\n    let [commentList, setCommentList] = useState([]);\n    let [likesCount, setLikesCount] = useState()\n    let {currentUser} = useContext(AuthContext);\n\n    useEffect( async () => {\n        let userId = props.photoObj.uid;\n        let docRef = await firebaseDb.collection('users').doc(userId).get();\n        let userPostCreated = docRef.data();\n\n        let commentList = props.photoObj.comments;\n        let updateCommentList = [];\n\n        for (let i = 0; i < commentList.length; i++) {\n            let commentObj = commentList[i];\n            let doc = await firebaseDb.collection('users').doc(commentObj.uid).get();\n            let commentuserPic = doc.data().profileImageUrl;\n            updateCommentList.push({profilePic: commentuserPic, comment: commentObj.comment})\n        }\n        \n        console.log(updateCommentList);\n        setUser(userPostCreated);\n        setCommentList(updateCommentList);\n    }, []);\n\n    const addCommentToCommentList = async (e) => {\n        let profilePic;\n        if(currentUser.uid == user.userId) {\n            profilePic = user.profileImageUrl;\n        } else {\n            let doc = await firebaseDb.collection('users').doc(currentUser.uid).get();\n            let userImg = doc.data().profileImageUrl;\n            profilePic = userImg;\n        }\n        let newCommentedList = [...commentList, {profilePic: profilePic, comment: comment}];\n        let postObj = props.photoObj;\n        postObj.comments.push({uid: currentUser.uid, comment: comment});\n        await firebaseDb.collection('posts').doc(postObj.pid).set(postObj);\n        setCommentList(newCommentedList);\n        setComment(\"\");\n    }\n\n    return (\n        <Container>\n            <Card style={{height:\"600px\", width:\"300px\"}}>\n                <Avatar src={user ? user.profileImageUrl : \"\"}></Avatar>\n                <Typography varient=\"span\"> {user ? user.username : \"\"} </Typography>\n                <div className=\"video-container\">\n                    <Video src={videoUrl}></Video>\n                </div>\n                <Typography variant=\"p\">Comments </Typography>\n                <TextField variant=\"outlined\" label=\"Add a comment\" size=\"small\" type=\"string\" value={comment} onChange={(e) => setComment(e.target.value)}></TextField>\n                <Button variant=\"contained\" onClick={addCommentToCommentList}>Post</Button>\n                {commentList.map((commentObj) => {\n                    return (\n                        <div>\n                        <Avatar src={commentObj.profilePic}></Avatar>\n                        <Typography variant=\"p\">{commentObj.comment}</Typography>\n                        </div>\n                    );\n                })}\n            </Card>\n        </Container>\n    );\n}\n\nfunction Video(props) {\n    const handleAutoScrol = (e) => {\n        let next = ReactDOM.findDOMNode(e.target).parentNode.parentNode.parentNode.parentNode.nextSiblings;\n        if(next) {\n            next.scrollIntoView({behaviour: \"smooth\"});\n            e.target.muted = true;\n        }\n    }\n\n    return (\n        <video className=\"video-styles\" controls muted={true} id={props.id} loop={true} onEnded={handleAutoScrol}>\n            <source src={props.src} type=\"video/mp4\"></source>\n        </video>\n    )\n}\n\nexport default VideoPost;"]},"metadata":{},"sourceType":"module"}